[general]
experiment_series = Proof of concept
question = will it work?
hypothesis = it will work
remarks = no remarks

[environment]
gpu_id = 0
loglevel = INFO
random_seed = 1
model_id = ecg_model_flex
preprocessor_id = ptbxl_preprocessor
evaluator_id = basic_evaluator
splitter_id = basic_splitter

[data]
leads_to_use = I,II,III,AVR,AVL,AVF,V1,V2,V3,V4,V5,V6
clinical_parameters_outputs = MI
subsampling_window_size = 2000
subsampling_factor = 50
snapshot_id = ptbxl_v1.0.1
dataset_id = ptbxl_v1.0.1_MI_use_case
metadata_id = ptbxl
split_id = ptbxl_MI_bootstrapping
stratification_variable = MI

[hyperparameters_ecgmodel_flex]
number_filters_conv = 16,16,32,32,64,64,1
number_neurons_dense = 64,32,2
size_kernel_conv = 5,5,5,3,3,3,12
size_kernel_pool = 2,2,4,2,2,4,0
stride_conv = 1,1,1,1,1,1,1
stride_pool = 1,1,1,1,1,1,0
padding_conv = valid,valid,valid,valid,valid,valid,valid
maxpooling_conv = true,true,true,true,true,true,false
batchnorm_conv = true,true,true,true,true,true,true
batchnorm_dense = true,true,false
transition_conv_dense = flatten
dropout_rate_conv = 0,0,0,0,0,0,0
dropout_rate_dense = 0,0,0
activation_function_conv = relu,relu,relu,relu,relu,relu,relu
activation_function_dense = relu,relu,softmax

[hyperparameters_general]
number_epochs = 100
optimizer = adam
learning_rate = 0.001
shuffle = true
loss_function = binary_crossentropy
validation_type = bootstrapping
bootstrapping_n = 100

[evaluation]
metrics = sensitivity,specificity,AUC,DOR
calculation_methods = sample_level,subsample_level
class_names = MI_TRUE
target_metric = DOR
tensorboard_subdir = example_use_case
sensitivity_threshold = 0.2
specificity_threshold = 0.2
save_raw_results = true